# -*- shell-script -*-

in-path ffmpeg || return 0

{
  local _ff
  for _ff in ff{mpeg,play,probe} ; do
    new-alias "$_ff" "$_ff -hide_banner"
  done
}

ffprobes() {
  local _f
  for _f in "$@" ; do

    # files not applicable as ffprobe input are ignored silently
    if file -i "$_f" 2>/dev/null | grep --silent -E '(audio|video)/' ; then

      ffprobe "$_f"

    fi

  done 2>&1 | grep --color=never --extended-regexp '^ *(Input|Duration:|Stream) '
}

fzf-ffprobes() (
  # CAUTION: For huge directory trees filtering for audio/video files will slow down loading fzf
  # list input. Use of --all avoids this but may add files not supported by ffprobe a/o vlc.

  while [[ "$1" =~ ^-+[[:alnum:]]+$ ]] ; do
    case "$1" in
       -a|--all) _all=y;;
      -h|--help) fn-usage "[--help] <files> | [--all] [--play] <dir> [<query>]"; return 0;;
      -p|--play) _cmd="vlc";;
    esac
    shift
  done

  if [[ $# -gt 0 && -d "$1" ]] ; then

    _ffprobes-all() {
      find "$1" -type f -printf '%P\n'
    }

    _ffprobes-filter() {
      find "$1" -type f -printf '%P\0' | xargs -r0 file -ni | sed -rn 's~^(.+): +(audio|video)/.*$~\1~p'
    }

    eval "_selected=($($([ -n "$_all" ] && echo _ffprobes-all || echo _ffprobes-filter) "$1" | \
                       sort | \
                       fzf --bind 'alt-v:execute-silent(vlc {})' \
                           --border none \
                           $(fzf-query-history) \
                           --list-label " Audio and video files in \"$(realpath "$1")/\" " \
                           --multi \
                           --no-sort \
                           --preview 'fzf-preview-file {}' \
                           --preview-label " ffprobe output (alt-v: play via VLC) " \
                           --preview-window '60%,~2:wrap' \
                           --print0 \
                           --query "$2" \
                           --reverse | \
                       xargs -0 -i@ echo '\"@\"'))"

    [ ${#_selected[@]} -gt 0 ] || return 0

    eval ${_cmd:-echo} "${_selected[@]}"

  else

    fn-error "Missing path argument(s)!"

  fi
)
