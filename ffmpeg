# -*- shell-script -*-

in-path ffmpeg || return 0

new-alias ffmpeg "ffmpeg -hide_banner"
new-alias ffprobe "ffprobe -hide_banner"

_ffprobes_filter() {
  find "$1" -type f -printf '%P\0' | xargs -r0 file -i | sed -rn 's~^(.+): +(audio|video)/.*$~\1~p'
}

_ffprobes_all() {
  find "$1" -type f -printf '%P\n'
}

ffprobes() {
  # CAUTION: For huge directory trees filtering for audio/video files will slow down loading fzf
  # list input. Use of --all avoids this but may cause error messages in preview window for
  # unsupported file formats.
  local _all _cmd

  while [[ "$1" =~ ^-+[[:alnum:]]+$ ]] ; do
    case "$1" in
       -a|--all) _all=y;;
      -h|--help) fn-usage "[--help] <files> | [--all] [--play] <dir> [<query>]"; return 0;;
      -p|--play) _cmd="vlc";;
    esac
    shift
  done

  if [[ $# -gt 0 && -d "$1" ]] ; then

    local -a _selected

    eval "_selected=($($([ -n "$_all" ] && echo _ffprobes_all || echo _ffprobes_filter) "$1" | \
                       sort | \
                       fzf --bind 'alt-p:execute-silent(vlc {1})' \
                           --border none \
                           --list-label " Audio and video files in \"$(realpath "$1")/\" " \
                           --multi \
                           --no-sort \
                           --preview 'echo {}; fzf_preview_hrule; ffprobe -hide_banner {}' \
                           --preview-label " ffprobe output (alt-p: play curr. item) " \
                           --preview-window '60%,~2:wrap' \
                           --print0 \
                           --query "$2" | \
                       xargs -0 -i@ echo '"@"'))"

    [ ${#_selected[@]} -gt 0 ] || return 0

    ${_cmd:-echo} "${_selected[@]}"

  elif [ $# -gt 0 ] ; then

    local _f
    for _f in "$@" ; do

      # files not applicable as ffprobe input are ignored silently
      if file -i "$_f" 2>/dev/null | grep --silent -E '(audio|video)/' ; then

        ffprobe "$_f"

      fi

    done 2>&1 | \
    grep --color=never --extended-regexp '^ *(Input|Duration:|Stream) '

  else

    fn-error "Missing path argument(s)!"

  fi
}
