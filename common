# -*- shell-script -*-
# Bash functions applicable in interactive login shells and scripts.

in-path() {
  local _cmd
  for _cmd in "$@" ; do
    type -fp "$_cmd" >/dev/null || return 1
  done
}

is-root() {
  [[ "$(id -u)" == "0" ]]
}

abbr-pwd() {
  sed -E -e "s:^${HOME}:~:;s:^.+((/[^/]+){3})$:…\1:;s:([^/]{4})[^/]{4,}([^/]{4})/:\1…\2/:g" <<< "$PWD"
}

cleanup-path() {
  export PATH=$(printf %s "$PATH" | awk -v RS=: -v ORS=: '!arr[$0]++' | sed -r 's/:://g;s/:$//;s/^://')
}

fdl() {
  # - fd with colored detailed list output ignoring Git worktree repos.
  # - "sed | column" is required to align fd output and to create columns suitable for feeding to
  #   fzf (desired columns might be selected via "--delimiter $'\u00a0' --with-nth
  #   <comma-separated-column-ids").
  # - CAUTION: Because of color escape sequences sorting by path sorts by $LS_COLORS type first and
  #   then by path.

  local _header _sort
  local -a _fd _sortcmd
  while [ $# -gt 0 ] ; do
    case "$1" in
        -h|--help) fn-usage "[--help] [--header] [--sort r?(date|path|size)] [{fd-argument}]"; return 0;;
        -s|--sort) [[ "$2" =~ ^r?(date|path|size)$ ]] && _sort="$2" || fn-abort "Unsupported --sort value: $2"; shift;;
      -H|--header) _header=y;;
                *) _fd+=("$1");;
    esac
    shift
  done

  if [[ ${#_fd[@]} -gt 0 && ! "${_fd[0]}" == "." && -d "${_fd[0]}" ]] ; then
    _fd=(. "${_fd[@]}")
    [ -n "$_sort" ] || _sort=date
  fi
  
  case "$_sort" in
    date|rdate) _sortcmd=(sort -t"|" -k6d${_sort/date/});;
    path|rpath) _sortcmd=(sort -t"|" -k7ifdb${_sort/path/});;
    size|rsize) _sortcmd=(sort -t"|" -k5h${_sort/size/});;
             *) _sortcmd=(cat);;
  esac

  fd "${_fd[@]}" --exclude .git --color=always --list-details | \
  sed -r 's~^([^ ]+ +[^ ]+ +[^ ]+ +[^ ]+ +[0-9]+,) ([0-9]+)~\1\2~;
          s~^([^ ]+) +([^ ]+) +([^ ]+) +([^ ]+) +([^ ]+) +([^ ][^\x1B]+) +([/\.\x1B])~\1|\2|\3|\4|\5|\6|\7~;
          s~(|\x1B\[[0-9\;]m)\./~\1~' | \
  { [ -z "$_header" ] || echo "Permission|Blk|Owner|Group|Size|Modified|Path"
    ${_sortcmd[@]}
  } | column -t -s"|" -o$'\u00a0 ' -l8
}
complete -o bashdefault -o default -o nosort -F _fd fdl

find-last() {
  find ${1:-.} -type f -printf "%M~%TF %TT~%u:%g~%s~%P\n" | \
  sed -r 's/(:[0-9]{2})\.[0-9]+~/\1~/' | \
  column -t -s~ -o'  ' | \
  sort -k2dr -k3dr
}
complete -A directory find-last

if in-path keepassxc-cli ; then

  mypassgen() {
    #CAUTION: Vault (root) token must not contain dots!
    keepassxc-cli generate --length "${1:-14}" --lower --upper --numeric --special --exclude-similar \
                           --every-group --exclude "({[<>]})&*?'\\\`\$\!\"."
  }

fi

strip_esc() {
  sed 's/\x1B\[[0-9;]*[a-zA-Z]//g'
}

uriencode() {
  gojq -nr --arg v "$1" '$v|@uri';
}
