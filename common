# -*- shell-script -*-
# Bash functions applicable in interactive login shells and scripts.

in-path() {
  local _cmd
  for _cmd in "$@" ; do
    type -fp "$_cmd" >/dev/null || return 1
  done
}

is-root() {
  [[ "$(id -u)" == "0" ]]
}

abbr-pwd() {
  sed -E -e "s:^${HOME}:~:;s:^.+((/[^/]+){3})$:…\1:;s:([^/]{4})[^/]{4,}([^/]{4})/:\1…\2/:g" <<< "$PWD"
}

cleanup-path() {
  export PATH=$(printf %s "$PATH" | awk -v RS=: -v ORS=: '!arr[$0]++' | sed -r 's/:://g;s/:$//;s/^://')
}

find-beyond-git() {
  if [ $# -gt 1 ] ; then
    find "$1" -name .git -prune -o "${@: 2}"
  else
    fn-usage "<path> {<find expression>}"
  fi
}

fdl() {
  # - fd with colored detailed output.
  # - "sed | column" is required to align fd output and to create columns suitable for feeding to
  #   fzf (desired columns might be selected via "--delimiter $'\u00a0' --with-nth
  #   <comma-separated-column-ids").
  # - Optional leading argument controls sorting: r?(date|path|size). CAUTION: Because of color
  #   escape sequences sorting by path sorts by $LS_COLORS type first and then by path.
  # - All other arguments will be forwarded to fd.

  local -a _sort
  case "$1" in
    date|rdate) _sort=(sort -t"|" -k6d${1/date/}); shift;;
    path|rpath) _sort=(sort -t"|" -k7ifdb${1/path/}); shift;;
    size|rsize) _sort=(sort -t"|" -k5h${1/size/}); shift;;
             *) _sort=(cat);;
  esac

  fd "$@" --exclude .git --color=always --list-details | \
  sed -r 's~^([^ ]+ +[^ ]+ +[^ ]+ +[^ ]+ +[0-9]+,) ([0-9]+)~\1\2~;
          s~^([^ ]+) +([^ ]+) +([^ ]+) +([^ ]+) +([^ ]+) +([^ ].+[0-9]) ([/\.\x1B])~\1|\2|\3|\4|\5|\6|\7~;
          s~(|\x1B\[[0-9\;]m)\./~\1~' | \
  ${_sort[@]} | \
  column -t -s"|" -o$'\u00a0 ' -l8
}

find-last() {
  find ${1:-.} -type f -printf "%M~%TF %TT~%u:%g~%s~%P\n" | \
  sed -r 's/(:[0-9]{2})\.[0-9]+~/\1~/' | \
  column -t -s~ -o'  ' | \
  sort -k2dr -k3dr
}
complete -A directory find-last

if in-path keepassxc-cli ; then

  mypassgen() {
    #CAUTION: Vault (root) token must not contain dots!
    keepassxc-cli generate --length "${1:-14}" --lower --upper --numeric --special --exclude-similar \
                           --every-group --exclude "({[<>]})&*?'\\\`\$\!\"."
  }

fi

uriencode() {
  gojq -nr --arg v "$1" '$v|@uri';
}
