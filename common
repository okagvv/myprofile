# -*- shell-script -*-
# Bash functions applicable in interactive login shells and scripts.

in-path() {
  type -fp "$1" >/dev/null
}

is-fn() {
  declare -F "$1" >/dev/null
}

abbr-pwd() {
  sed -E -e "s:^${HOME}:~:;s:^.+((/[^/]+){3})$:…\1:;s:([^/]{4})[^/]{4,}([^/]{4})/:\1…\2/:g" <<< "$PWD"
}

cleanup-path() {
  export PATH=$(printf %s "$PATH" | awk -v RS=: -v ORS=: '!arr[$0]++' | sed -r 's/:://g;s/:$//;s/^://')
}

find-last() {
  find ${1:-.} -type f -printf "%M~%TF %TT~%u:%g~%s~%P\n" | \
  sed -r 's/(:[0-9]{2})\.[0-9]+~/\1~/' | \
  column -t -s~ -o'  ' | \
  sort -k2dr -k3dr
}
complete -A directory find-last

myjournalctl() {
  journalctl --no-hostname --output=short-iso "$@"
}
export -f myjournalctl

if in-path keepassxc-cli ; then

  mypassgen() {
    #CAUTION: Vault (root) token must not contain dots!
    keepassxc-cli generate --length "${1:-14}" --lower --upper --numeric --special --exclude-similar \
                           --every-group --exclude "({[<>]})&*?'\\\`\$\!\"."
  }

fi

uriencode() {
  gojq -nr --arg v "$1" '$v|@uri';
}
