# -*- shell-script -*-

myprofile _fzf

_journal() {
  local _sudo

  if [[ "$1" =~ ^[[:alnum:]]+$ ]] && id --user "$1" >/dev/null 2>&1 ; then
    _sudo="sudo -A -u $1"
    shift
  fi

  $_sudo journalctl --no-hostname --lines 1000 --reverse --boot --pager-end "$@" | \
  BAT_STYLE="${BAT_STYLE:-numbers}" bat --color always --language syslog
}
export -f _journal

_fzf-journal() {
  _journal-params

  _header="Journal entries for {1}"
  _journal="_journal $_user --boot $_boot --identifier={1} --since \"$_since\" $_grep"
  _prio_journal="$_journal --priority=$_priorange"
  _altj="_fzf-preview-header \"$_header\"; $_journal"
  _altp="_fzf-preview-header \"$_header with priority $_priorange\"; $_prio_journal"

  { $_sudo journalctl --output=export --output-fields=SYSLOG_IDENTIFIER --boot $_boot --since "$_since" --priority="$_priorange" $_grep | \
    sed -rn 's/^SYSLOG_IDENTIFIER=(.+)/\1/p' | \
    sort | \
    uniq -c | \
    column -t -C name=Entries,right -C name=Identifier -O Identifier,Entries
  } | \
  _fzf-wrapper --bind "$([[ "$_prio" == debug ]] && echo "alt-p:change-preview($_altp)" || echo "alt-j:change-preview($_altj)")" \
               --bind "alt-J:execute($_journal --catalog)" \
               --bind "alt-P:execute($_prio_journal --catalog)" \
               --bind "alt-enter:become(BAT_STYLE=plain BAT_PAGER= $_prio_journal)" \
               --border-label "[ Journal entries per syslog identifier logged since $_since in reverse order ]" \
               --color "label:reverse" \
               --header-lines 1 \
               --help "Alt-j:Recent journal entries;Alt-J:Recent journal entries in pager
                       Alt-p:Recent journal entries with priority $_priorange;Alt-P:Recent journal entries with priority $_priorange in pager
                       Alt-Enter:Return journal entries for selected syslog identifier" \
               --no-sort \
               --preview-init "$([[ "$_prio" == debug ]] && echo "alt-j:$_altj" || echo "alt-p:$_altp")" \
               --preview-window "70%,~2:wrap" \
               --query "$1" \
               --reverse
}

_fzf-units() {
  _journal-params

  _header="Journal entries for unit {1}"
  _journal="_journal ${_sudo:+$_user} --unit {1} --boot $_boot --since \"$_since\" $_grep"
  _prio_journal="$_journal --priority=$_priorange"
  _systemctl="$_sudo systemctl"
  _properties="$_systemctl show {1} | sort | bat --color always --number --language ini"

  local _altp _alts _preview_init
  _altp="_fzf-preview-header \"$_header with priority $_priorange\"; $_prio_journal"
  _alts="_fzf-preview-header \"Status of unit {1}\"; $_systemctl status -- {1}"
  [[ "$_boot" =~ [1-9] ]] && _preview_init="alt-p:$_altp" || _preview_init="alt-s:$_alts"

  if [[ -z "$_all$_failed" && -n "$_prio" ]] ; then
    $_sudo journalctl --output=export --output-fields=$([[ "$_user" == root ]] && echo _SYSTEMD_UNIT,UNIT || echo _SYSTEMD_USER_UNIT,USER_UNIT) \
                      --boot $_boot --since "$_since" --priority="$_priorange" $_grep | \
    sed -rn 's/^.*UNIT=(.+)$/\1/p' | \
    sort | \
    uniq -c | \
    column -t -C name=Entries,right -C name=Unit -O Unit,Entries
  else
    $_sudo systemctl --plain $_all $_failed | \
    sed '/^$/,$d'
  fi | \
  _fzf-wrapper --bind "alt-d:change-preview(_fzf-preview-header \"Dependencies for unit {1}\"; $_systemctl list-dependencies {1})" \
               --bind "alt-f:change-preview(_fzf-preview-header \"Unit files for {1}\"; $_systemctl cat -- {1})" \
               --bind "alt-h:change-preview(_fzf-preview-header \"Help for unit {1}\"; $_systemctl help {1} | bat --color=always --style plain --language man)" \
               --bind "alt-j:change-preview(_fzf-preview-header \"$_header\"; $_journal)" \
               --bind "alt-J:execute($_journal --catalog)" \
               --bind "alt-o:change-preview(_fzf-preview-header \"Show properties for unit {1}\"; $_properties)" \
               --bind "alt-O:execute($_properties)" \
               --bind "alt-p:change-preview($_altp)" \
               --bind "alt-P:execute($_prio_journal --catalog)" \
               --bind "alt-r:change-preview(_fzf-preview-header \"Restart unit {1}\"; $_systemctl restart --show-transaction {1})" \
               --bind "enter:become(echo systemctl status,restart,stop {+1})" \
               --bind "alt-enter:become(BAT_STYLE=plain BAT_PAGER= $_prio_journal)" \
               --border-label "[ Systemd Units with journal entries logged during $_since in reverse order ]" \
               --color "label:reverse" \
               --header-lines 1 \
               --help "Alt-d:Unit dependencies;Alt-f:List unit files;Alt-h:Help for unit
                       Alt-j:Recent journal entries;Alt-J:Recent journal entries in pager
                       Alt-o:Show properties;Alt-O:Show properties in pager
                       Alt-p:Recent journal entries with priority $_priorange;Alt-P:Recent journal entries with priority $_priorange in pager
                       Alt-r:Restart unit;Enter:Print systemctl template for selected units
                       Alt-Enter:Return journal entries for selected unit$([[ "$_boot" =~ [1-9] ]] || echo -n ";Alt-s:Unit status")" \
               --multi \
               --no-sort \
               --preview-init "$_preview_init" \
               --preview-window "70%,~2:wrap" \
               --query "$1" \
               --reverse
}

_journal-params() {
  [[ "$_prio" =~ \.\. ]] && _priorange="$_prio" || _priorange="0..$_prio"
  [[ "$_since" =~ ^[[:digit:]]+$ ]] && _since+=" hours"
  _since+=" ago"

  if [[ ! "$_boot" =~ ^\-[[:digit:]]+$ ]] ; then

    _boot="$($_sudo journalctl --list-boots --reverse --output json | \
             gojq -r '.[] |
                      [ .index, (.first_entry|(./1000000|strftime("%F %T %Z"))), (.last_entry|(./1000000|strftime("%F %T %Z"))) ] |
                      join(";")' | \
             column -t -s ";" -o$' \u00a0' -C name=IDX,right -C name="FIRST ENTRY" -C name="LAST ENTRY" | \
             _fzf-wrapper --accept-nth '_boot="{1}";_since="{2}"' \
                          --border-label "[ Select boot to examine ]" \
                          --color "label:reverse" \
                          --delimiter $'\u00a0' \
                          --header-lines 1 \
                          --no-multi \
                          --reverse)"

    [ -n "$_boot" ] && eval "$_boot" || fn-abort "No boot selected!"
    _boot="${_boot// /}"

  fi

  # validate journalctl parameters
  $_sudo journalctl --boot $_boot --lines 1 --since "$_since" --priority="$_priorange" >/dev/null || exit 1
}
