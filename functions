# -*- shell-script -*-

if in-path rsync ; then
  
  rsyncp() {
    local -a _opts
    _opts=(--archive --backup --hard-links --human-readable --itemize-changes --progress --whole-file)

    while [ $# -gt 1 ] ; do
      case "$1" in
          -h|--help) fn-usage "[--dry] [--remove] <source-dir>/? <target-dir>"; return 0;;
           -d|--dry) _opts+=(--dry-run --verbose);;
        -r|--remove) _opts+=(--delete-delay);;
                  *) break;;
      esac
      shift
    done

    if [[ $# -ge 2 && -d "${@: -2:1}" && -d "${@: -1}" ]] ; then

      local _dir
      for _dir in "${@: -2}" ; do
        if [[ "$(stat -f -c %T "$_dir" 2>/dev/null)" =~ ^(nfs|exfat|fuseblk)$ ]] ; then
          _opts+=(--no-perms --no-owner --no-group)
          break
        fi
      done

      ionice -c2 -n7 rsync "${_opts[@]}" "$@"

    else

      fn-error "Source (${@: -2:1}) a/o target (${@: -1}) directories do not exist!"

    fi
  }

fi

if [[ ! "$(id -u)" == "0" ]] ; then

  journalctl() { /usr/bin/journalctl --user "$@"; }
  systemctl() { /usr/bin/systemctl --user "$@"; }
  export -f journalctl systemctl
  
  return 0

fi

# ------------ functions requiring root permission ------------

juser() {
  if [ $# -gt 0 ] ; then
    local _uid="$(id -u "$1")"
    shift
    myjournalctl --pager-end _UID="$_uid" "$@"
  else
    fn-usage "user [journalct options]"
  fi
}
complete -A user -o default juser

mysu() {
    # Start command-line via su for user derived from path owner of last argument.
    # Preserves white spaces in arguments.
    if [ $# -ge 2 ] ; then
      su $(stat -c %U "${*: -1}") -c "$(printf "'%s' " "${@}")"
    else
      fn-usage "command [options|args] file"
    fi
}
complete -A command -o default mysu

oom-killed() {
  myjournalctl --dmesg --since today "$@" | grep -i 'killed process'
}
