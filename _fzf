# -*- shell-script -*-
#
# CAUTION: This profile script is intended only for sourcing by profile functions utilizing _fzf-wrapper().

myprofile common fn rpm ffmpeg

FZF_DEFAULT_OPTS="--border rounded --border-label-pos 3 --list-border rounded --list-label-pos 3 --preview-label-pos 3 --no-mouse --info=inline --bind 'esc:cancel,alt-up:preview-up,alt-down:preview-down,alt-left:preview-page-up,alt-right:preview-page-down,home:first,end:last,f2:toggle-hscroll,f3:toggle-preview-wrap,f4:change-preview-window(80%|70%|60%|50%|40%)+refresh-preview,f5:toggle-preview,f6:jump,f7:preview-half-page-up,f8:preview-half-page-down,f9:preview-top,f10:preview-bottom' --history-size 100 --highlight-line --info-command='echo \$FZF_POS/\$FZF_INFO' --exact --ignore-case"
export FZF_HISTORY_DIR="$HOME/.config/fzf"
[ -d $FZF_HISTORY_DIR ] || mkdir -p $FZF_HISTORY_DIR

if is-root ; then

  export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --color=light,fg:0,bg:#ffdfdf,hl:33,fg+:0,bg+:#ffcdcd,hl+:33,info:33,prompt:33,pointer:166,marker:166,spinner:33,query:31"

else

  export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --color=light,fg:240,bg:230,hl:33,fg+:241,bg+:221,hl+:33,info:33,prompt:33,pointer:166,marker:166,spinner:33,query:31"

fi

_fzf-query-history () {
  echo "--history $FZF_HISTORY_DIR/${FUNCNAME[${1:--1}]}.history"
}

_fzf-preview-bat() {
  bat --color=always --terminal-width $FZF_PREVIEW_COLUMNS "$@"
}

_fzf-preview-path() {
  _fzf-preview-header "Path \"$1\""

  if [ -e "$1" ] ; then

    local _mime _size
    _mime="$(file --brief --mime "$1")"
    _size="$(du -sh "$1" | cut -f1)"

    cat <<EOF | tr -s " " | column -t -d -s":" -l2 -o":" -C right
Type: $_mime
$(stat --printf "Size: %s ($_size)\nPermisson: %a (%A)\nContext: %C\nAccessed: %x\nModified: %y\nChanged: %z\nCreated: %w\n" "$1")
$(is-fn rpm-owner && echo "RPM: $(rpm-owner --short "$1" | sed -r 's/^.*(is not owned by any package).*$/\1/')")
EOF

    if [[ -r "$1" && -s "$1" ]] ; then
      case "$_mime" in
             *audio*|*video*) if is-fn ffprobes ; then _fzf-preview-header; ffprobes --yaml "$1"; fi;;
                       *pdf*) if in-path pdfinfo ; then _fzf-preview-header; pdfinfo -isodates "$1"; fi;;
                       *rpm*) if in-path rpm ; then _fzf-preview-header; rpm -qip "$1"; fi;;
                      *text*) _fzf-preview-header; _fzf-preview-bat --number "$1";;
        *zip*|*java-archive*) _fzf-preview-header; unzip -l "$1";;
      esac
    fi

  else

    fn-logger err "Path \"$1\" does not exist!"

  fi
}

_fzf-preview-header() {
  [ -z "$1" ] || echo "$1"
  printf "%*s" ${FZF_PREVIEW_COLUMNS:-${#1}} | sed 's/ /â”ˆ/g'
  echo
}

_fzf-help() {
  _fzf-preview-header "fzf key bindings"
  ( echo "
ESC:Cancel.
Tab:Toggle selection for current match.
F1:This help.
F2:Toggle horizontal scroll to match.
F3:Toggle line wrap for preview.
F4:Step through preconfigured preview widths.
F5:Toggle preview.
F6:Toggle jump mode.
F7:Preview half page up.
F8:Preview half page down.
F9:Preview top.
F10:Preview bottom.
Alt-Left:Preview page up.
Alt-Right:Preview page down.
Alt-Up:Preview line up.
Alt-Down:Preview line down.
Ctrl-p:Search history up.
Ctrl-n:Search history down.
Home:First match.
End:Last match.
$(if [ -n "$1" ] ; then echo -; sed -r 's/;/.\n/g' <<<"$1;" | sort -V; fi)"
  ) | column -t -s: -o": " | sed 's/^- *://'
}

_fzf-wrapper() {
  # args: --help "help text for function specific bindings"
  #       --preview-init "key for default preview":"default preview command" ["add. actions for default preview binding"]
  #       --prompt "text" - overiding default prompt"
  #       --script "name" - overriding default for use in diagnostic messages
  # CAUTION: F1 binding requires "+change-preview-window(+0)" to compensate for a preview window
  # config including a match dependent scroll offset (s.a. fzf-rg()).
  local -a _args _prompt
  while [ $# -gt 0 ]; do
    case "$1" in
                 --help) _args+=(--bind "f1:show-preview+change-preview(_fzf-help \"$2\")+change-preview-window(+0)")
                         shift;;
         --preview-init) _args+=(--preview "${2#*:}"
                                 --bind "${2%%:*}:show-preview+change-preview(${2#*:})$([[ "$3" =~ ^\+ ]] && echo "$3")")
                         shift $([[ "$3" =~ ^\+ ]] && echo 2 || echo 1);;
               --prompt) _prompt="$2"; shift;;
               --script) script="$2"; shift;;
      *:change-preview*) _args+=("${1%%:*}:show-preview+${1#*:}");;
                      *) _args+=("$1");;
    esac
    shift
  done

  [ -n "$script" ] || script="${FUNCNAME[1]}"
  export script
  
# fn-vars _args
  fzf --bind "load:change-prompt(${_prompt:->} )" \
      --prompt '< .. loading .. > ' \
      $(_fzf-query-history 2) \
      "${_args[@]}"
}

_fzf-editor() {
  case "$EDITOR" in
    *vi*|*nano*) $EDITOR "$1" ${2:++$2};;
        *emacs*) $EDITOR ${2:++$2} "$1";;
              *) $EDITOR "$1";;
  esac
}

_fzf-journal() {
  local _sudo
  
  if [[ "$1" =~ ^[[:alnum:]]+$ ]] && id --user "$1" >/dev/null 2>&1 ; then
    _sudo="sudo -A -u $1"
    shift
  fi
  
  $_sudo journalctl --no-hostname --catalog --lines 1000 --reverse --boot --pager-end "$@" | \
  bat --color always --language syslog --number
}

if in-path podman ; then

  _fzf-podman-query() {
    _fzf-preview-header "$1"
    shift
    $* | gojq --yaml-output | _fzf-preview-bat --style plain --language yaml
  }
  export -f _fzf-podman-query

fi

fn-export "^(_fzf|fn)-[[:alnum:]-]+$" in-path "^is-(fn|root)$" rpm-owner ffprobes
