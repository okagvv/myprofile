# -*- shell-script -*-
#
# CAUTION: This profile script is intended only for sourcing by profile functions utilizing _fzf-wrapper().

myprofile common fn rpm ffmpeg

export FZF_HISTORY_DIR="$HOME/.config/fzf"
[ -d $FZF_HISTORY_DIR ] || mkdir -p $FZF_HISTORY_DIR

_fzf-defaults() {
  FZF_DEFAULT_OPTS="--border rounded --border-label-pos 3 --list-border rounded --list-label-pos 3 --preview-label-pos 3 --bind 'esc:cancel,alt-up:preview-up,alt-down:preview-down,alt-left:preview-page-up,alt-right:preview-page-down,home:first,end:last,f2:toggle-hscroll,f3:toggle-sort,f4:change-preview-window(80%|70%|60%|50%|40%)+refresh-preview,f5:toggle-preview,f6:jump,f7:toggle-wrap,f8:toggle-preview-wrap,f9:preview-top,f10:preview-bottom,f12:toggle-header,shift-up:toggle+up,shift-down:toggle+down,shift-left:preview-half-page-up,shift-right:preview-half-page-down' --history-size 100 --info=inline --info-command='echo \$FZF_POS/\$FZF_INFO' --highlight-line --no-mouse --exact --ignore-case"

  if is-root || [ -n "$1" ] ; then

    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --color=light,fg:0,bg:#ffdfdf,alt-bg:#ffd7d7,hl:33,fg+:0,bg+:#ffcdcd,hl+:33,info:33,prompt:33,pointer:166,marker:166,spinner:33,query:31"
    export NEWT_COLORS="root=,#ffdfdf title=blue,"

  else

    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --color=light,fg:240,bg:#ffffd7,alt-bg:#f8f8d7,hl:33,fg+:241,bg+:221,hl+:33,info:33,prompt:33,pointer:166,marker:166,spinner:33,query:31"
    export NEWT_COLORS="root=,#ffffd7 title=blue,"

  fi
}

_fzf-query-history () {
  echo "--history $FZF_HISTORY_DIR/${FUNCNAME[${1:--1}]}.history"
}

# CAUTION: With default pager setting ("less -RF") fzf "--bind '..:execute(..)" exits immediately after printing last line
export BAT_PAGER="less -R"

_fzf-preview-bat() {
  bat --color=always ${FZF_PREVIEW_COLUMNS:+--terminal-width $FZF_PREVIEW_COLUMNS} "$@"
}

_fzf-bat-highlight() {
  rg --ignore-case --color=never "$@" | sed -rn 's/^([[:digit:]]+):.*$/-H \1:\1/p' | tr '\n' ' '
}

_fzf-preview-path() {
  _fzf-preview-header "Path \"$1\""

  if [ -e "$1" ] ; then

    local _mime _size
    _mime="$(file --brief --mime "$1")"
    _size="$(du -sh "$1" | cut -f1)"

    cat <<EOF | tr -s " " | column -t -d -s":" -l2 -o":" -C right
Type: $_mime
$(stat --printf "Size: %s ($_size)\nPermisson: %a (%A)\nContext: %C\nAccessed: %x\nModified: %y\nChanged: %z\nCreated: %w\n" "$1")
$(is-fn rpm-owner && echo "RPM: $(rpm-owner --short "$1" | sed -r 's/^.*(is not owned by any package).*$/\1/')")
$(in-path git && echo "Git: $(git log -1 --pretty="%h %ad %an %s" --date="format:%F %T" -- "$1" 2>/dev/null || echo "Not committed.")")
EOF

    if [[ -r "$1" && -s "$1" ]] ; then
      case "$_mime" in
             *audio*|*video*) if is-fn ffprobes ; then _fzf-preview-header; ffprobes --yaml "$1"; fi;;
                       *pdf*) if in-path pdfinfo ; then _fzf-preview-header; pdfinfo -isodates "$1"; fi;;
                       *rpm*) if in-path rpm ; then _fzf-preview-header; rpm -qip "$1"; fi;;
                      *text*) _fzf-preview-header; _fzf-preview-bat --number "$1";;
        *zip*|*java-archive*) _fzf-preview-header; unzip -l "$1";;
                           *) _fzf-preview-header; file "$1";;
      esac
    fi

  else

    fn-logger err "Path \"$1\" does not exist!"

  fi
}

_fzf-preview-header() {
  [ -z "$1" ] || echo "$1"
  printf "%*s" ${FZF_PREVIEW_COLUMNS:-${#1}} | sed 's/ /â”ˆ/g'
  echo
}

_fzf-help() {
  local _help _w _h _scroll
  _help="$({ echo "$(if [ -n "$1" ] ; then tr ';' '\n'  <<<"$2" | sed -r 's/^[[:space:]]+//;s/([^\.])$/\1./' | sort --ignore-case; echo -; fi)
ESC:Cancel.
Tab:Toggle selection for current match.
F1:This help.
F2:Toggle horizontal scroll to match.
F3:Toggle sort.
F4:Step through preconfigured preview widths.
F5:Toggle preview.
F6:Toggle jump mode.
F7:Toggle line wrap.
F8:Toggle line wrap for preview.
F9:Preview top.
F10:Preview bottom.
F12:Toggle header.
Home:First match.
End:Last match.
Alt-!:Open subshell
Alt-Left:Preview page up.
Alt-Right:Preview page down.
Alt-Up:Preview line up.
Alt-Down:Preview line down.
Shift-Left:Preview half page up.
Shift-Right:Preview half page down.
Ctrl-p:Search history up.
Ctrl-n:Search history down.$([[ "$XDG_SESSION_TYPE" = tty ]] || echo "
Ctrl-c:Copy current entry to clipboard.
Ctrl-v:Insert clipboard content in query.")"
  } | column -t -s: -o": " | sed 's/^- *://')"

  eval "$(wc -l -L <<<"$_help" | sed -rn 's/^[[:space:]]+([[:digit:]]+)[[:space:]]+([[:digit:]]+)/_h=\1;_w=\2/p')"
  ((_w+=8))
  ((_h+=8))
  [ "$FZF_COLUMNS" -gt "$_w" ] || _w="$FZF_COLUMNS"
  [ "$FZF_LINES" -gt "$_h" ] || { _h="$FZF_LINES"; _scroll="--scrolltext"; }

  whiptail $_scroll --ok-button Close --fullbuttons --title "$1 key bindings" --msgbox "$_help" "$_h" "$_w"
}

_fzf-wrapper() {
  # args: --help "help text for function specific bindings"
  #       --preview-init "key for default preview":"default preview command" ["add. actions for default preview binding"]
  #       --prompt "text" - overiding default prompt"
  #       --script "name" - overriding default for use in diagnostic messages
  local -a _args _prompt _sudo
  while [ $# -gt 0 ]; do
    case "$1" in
                 --help) _args+=(--bind "f1:execute(_fzf-help $(fn-parent) '$2')")
                         shift;;
         --preview-init) _args+=(--preview "${2#*:}"
                                 --bind "${2%%:*}:show-preview+change-preview(${2#*:})$([[ "$3" =~ ^\+ ]] && echo "$3")")
                         shift $([[ "$3" =~ ^\+ ]] && echo 2 || echo 1);;
               --prompt) _prompt="$2"; shift;;
               --script) script="$2"; shift;;
                 --sudo) _sudo=y;;
      *:change-preview*) _args+=("${1%%:*}:show-preview+${1#*:}");;
                      *) _args+=("$1");;
    esac
    shift
  done

  # ctrl-v bindings found at https://github.com/junegunn/fzf/issues/3376
  case "$XDG_SESSION_TYPE" in
        x11) _args+=(--bind 'ctrl-v:transform(echo "put($(xclip -o -selection clipboard))")'
                     --bind "ctrl-c:execute-silent(echo {} | _fzf-copy)");;
    wayland) _args+=(--bind 'ctrl-v:transform(echo "put($(wl-paste))")');;
  esac

  _fzf-defaults "$_sudo"

  # fn-xtrace
  fzf --bind "load:change-prompt(${_prompt:->} )+change-ghost([query])" \
      --bind "alt-!:execute(SUBSHELL=\"$(fn-parent)\" \"$SHELL\" -l)" \
      --prompt '[loading] > ' \
      $(_fzf-query-history 2) \
      "${_args[@]}"
}

_fzf-editor() {
  if [[ -f "$1" && -r "$1" ]] ; then
    case "$EDITOR" in
      *vi*|*nano*) $EDITOR "$1" ${2:++$2};;
          *emacs*) $EDITOR ${2:++$2} "$1";;
                *) $EDITOR "$1";;
    esac
  fi
}

_fzf-browser() {
  if [ -n "$1" ] ; then
    if [ -n "$BROWSER" ] ; then
      "$BROWSER" "$@"
    else
      fn-logger err "Failed to open URL: \$BROWSER is not defined!"
    fi
  fi
}

_fzf-copy() {
  if [ -n "$DISPLAY" ] ; then
    strip_esc | xclip -in -selection clipboard
  else
    fn-logger err "Copy to clipboard failed: \$DISPLAY is not defined."
  fi
}

if in-path podman ; then

  _fzf-podman-query() {
    _fzf-preview-header "$1"
    shift
    $* | gojq --yaml-output | _fzf-preview-bat --style plain --language yaml
  }
  export -f _fzf-podman-query

fi

fn-export "$MYPROFILE"/{common,fn} "^_fzf-[[:alnum:]-]+$" rpm-owner ffprobes
