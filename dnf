# -*- shell-script -*-

in-path dnf || return 0

rpm-ostree status --booted 2>/dev/null 1>&2 && return 0

dnf-repoquery() {
  sudo -A dnf repoquery --quiet "$@"
}

dnf-files() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --list "$*"
  else
    fn-usage "package"
  fi
}

dnf-history() (
  if [[ "$1" =~ ^-+h(elp)?$ ]] ; then

    fn-usage "[--help] [package ..]"

  else

    myprofile _fzf

    _history() {
      sudo -A dnf history "$@"
    }
    _info() {
      _history info "$1" | _fzf-preview-bat --style plain --language log
    }
    export -f _history _info

    local _packages
    [ $# -eq 0 ] || _packages="--contains-pkgs=$(IFS=,; echo "$*")"

    _history list $_packages | \
    tail -n +2 | \
    awk  '{ printf "%s|%s %s|%s %s|%s\n",$1,$(NF-2),$(NF-1),$2,$3,$NF }' | \
    column -t -s"|" -C name=No,right -C name=Timestamp -C name=Command -C name=Packages,right | \
    _fzf-wrapper --bind "enter:execute(_info {1})" \
                 --bind "alt-r:execute(_history redo {1})" \
                 --bind "alt-R:execute(_history rollback {1})" \
                 --bind "alt-u:execute(_history undo {1})" \
                 --border none \
                 --color "label:reverse" \
                 --header-lines 1 \
                 --help "Enter:Open transaction info in pager;Alt-r:Redo selected transaction;Alt-u:Undo selected transaction
                         Alt-R:Rollback to selected transaction" \
                 --list-label "[${_packages/*=/ } DNF transaction(s) ]" \
                 --no-multi \
                 --no-sort \
                 --reverse \
                 --preview "_info {1}" \
                 --preview-label "[ DNF transaction info ]" \
                 --preview-window "70%,~1:wrap"

  fi
)

dnf-list() (
  while [ $# -gt 0 ] ; do
    case "$1" in
      -h|--help) fn-usage "[--help] [fzf query]"; exit 0;;
              *) break;;
    esac
  done

  # CAUTION: Utilizes _fzf-rpm (avoids latency caused by dnf wrapping rpm API for installed
  # packages). Only difference is use of dnf-what() instead of rpm-what(): "dnf repoquery --what*
  # --resolve" results are less prone to inconstent package capability notations.
  myprofile _rpm
  fn-export dnf-what dnf-repoquery
  _fzf-rpm "$@"
)

dnf-install() (
  if [[ "$1" =~ ^-+h(elp)?$ ]] ; then

    fn-usage "[--help | path | query]
In case argument contains a slash then it is assumed packages deploying this path pattern are to
search. Otherwise argument is treated as fzf query."

  else

    myprofile _dnf
    local _search _query
    [[ "$1" =~ / ]] && _search="$1" || _query="$1"
    _dnf-packages $_search | \
    _fzf-dnf-packages "Install packages via DNF" "Available DNF packages" "$_query" | \
    xargs --no-run-if-empty --open-tty sudo dnf install

  fi
)

dnf-remove() (
  myprofile _dnf
  _dnf-packages --installed | \
  _fzf-dnf-packages "Remove packages via DNF" "Installed packages" "$1" | \
  xargs --no-run-if-empty --open-tty sudo dnf remove
)

dnf-search() (
  if [ $# -gt 0 ] ; then

    myprofile _dnf

    { echo "Package : Summary"
      myprofile _dnf
      sudo -A dnf search --quiet "$@" | \
      sed -rn 's/^ ?([[:alnum:]_\.-]+ *:? +[[:alnum:]].*)$/\1/p' | \
      sort | \
      uniq
    } | column -t -s: -l2 | \
    _fzf-dnf-packages "Search package matching $*" "Matching packages" | \
    xargs --no-run-if-empty --open-tty sudo dnf install

  else

    fn-usage "[--all] <pattern>"

  fi
)

dnf-upgrades() (
  local _testing _scopes
  while [ $# -gt 0 ] ; do
    case "$1" in
           -b|--bugfix) _scopes+=" --bugfix";;
      -e|--enhancement) _scopes+=" --enhancement";;
             -h|--help) fn-usage "[--bugfix] [--enhancement] [--help] [--security] [--testing] [pattern]"; return 0;;
         -s|--security) _scopes+=" --security";;
          -t|--testing) _testing="--enablerepo *updates-testing";;
                     *) break;;
    esac
    shift
  done
  export _testing _scopes

  __bodhi() {
    _bodhi-updates "${2%.*}-$3.${2##*.}"
  }
  __dnf() {
    sudo dnf $1 $_testing --quiet "${@: 4}" "${2%.*}-$3.${2##*.}"
  }
  __upgrades() {
    {
      echo "Package Version Repository"
      sudo -A dnf check-upgrade $_testing $_scopes --quiet
    } | sed -rn '/(Obsoleting packages|No security updates needed)/Iq;p' | \
        column -t
  }
  export -f __bodhi __dnf __upgrades

  myprofile _dnf

  FZF_DEFAULT_COMMAND=__upgrades \
  _fzf-wrapper --bind "ctrl-a:toggle-all" \
               --bind "alt-b:execute(__bodhi {1} {2})" \
               --bind "alt-d:execute(sudo dnf remove {+1})+reload(__upgrades)" \
               --bind "alt-i:change-preview(__dnf repoquery {1} {2} --info; printf \"\\n%-15s: %s\" Current \$(rpm -q {1}))" \
               --bind 'alt-h:execute-silent(_fzf-browser "$(__dnf repoquery {1} {2} --queryformat "%{url}")")' \
               --bind "alt-w:change-preview(_dnf-preview-what {1})" \
               --bind 'enter:become(echo {+1})' \
               --bind 'zero:execute(echo "No pending updates found!")+abort' \
               --border none \
               --header-lines 1 \
               --help "Alt-b:Search package on Bodhi;Alt-c:Package change log;Alt-d:Remove selected packages
                       Alt-h:Open package URL in \$BROWSER;Alt-i:Package info;Alt-w:What packages relate to selected one
                       Ctrl-a:Toggle select all;Enter:Upgrade selected packages" \
               --list-label " Select${_scopes//--/} upgrades to install " \
               --multi \
               --no-sort \
               --preview-init "alt-c:__dnf changelog {1} {2}" \
               --preview-label " Press F1 for help " \
               --preview-window "60%,~1:wrap" \
               --query "$1" \
               --reverse | \
  xargs --no-run-if-empty --open-tty sudo dnf upgrade $_testing
)
complete -W "--{bugfix,enhancement,help,security,testing}" dnf-upgrades

dnf-what() {
  local _installed _query _rpm

  if [[ "$1" =~ ^-+i(nstalled)?$ ]] ; then

    _installed="--installed"
    shift

  fi

  if [ $# -eq 1 ] ; then

    _rpm="$(dnf-repoquery --qf "%{NAME}" ${_installed:---available} "$1")"

    if [ -z "$_rpm" ] ; then

      fn-error "Package \"$1\" is $([ -n "$_installed" ] && echo "not installed" || echo "unknown")!"
      return 1

    fi

    for _query in requires depends enhances provides recommends suggests supplements obsoletes conflicts requires-pre; do

      { echo -e "=${_query^}:\n$(dnf-repoquery --$_query $_installed --resolve "$_rpm")\n"
        [[ "$_query" == "requires-pre" ]] || echo -e "\n=What $_query:\n$(dnf-repoquery --qf "%{NAME}" $_installed --what$_query "$_rpm")\n\n"
      } | sed -r 's/^no package .+$//;s/^([^=][^ ]+)/  - \1/;s/^=//' | cat --squeeze-blank

    done

  else

    fn-usage "[--installed] package"

  fi
}
