# -*- shell-script -*-

in-path dnf || return 0

rpm-ostree status --booted 2>/dev/null && return 0

dnf-repoquery() {
  sudo dnf repoquery --cacheonly --quiet "$@"
}
export -f dnf-repoquery

dnf-files() {
  if [ $# -gt 0 ] ; then
    sudo dnf-repoquery --list "$*"
  else
    fn-usage "package"
  fi
}

dnf-list() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --qf='%10{repoid} %{buildtime} %{installtime} %-10{downloadsize}->%10{installsize} %{name}-%{evr}.%{arch}\n\t\t\t\t\t\t    %{summary}' "$*"
  else
    fn-usage "package .."
  fi
}

dnf-history() {
  if [[ "$1" =~ ^-+h(elp)?$ ]] ; then

    fn-usage "[--help] [package ..]"

  else

    sudo dnf history "$@" | \
    tail -n +3 | \
    awk -v FS="|" '{ printf "%s|%s|%s\n",$1,$3,$2 }' | \
    sed -r 's/ \| /\|/g' | \
    column -t -s"|" -C name=No,right -C name=Timestamp -C name=Scope | \
    _fzf-wrapper "alt-i:history info;enter: Print command-line template for processing selected transaction" \
                 "alt-i" "dnf history info {1}" "40%,~1:wrap" \
                 --bind "enter:become(echo dnf history info,redo,rollback,undo {1})" \
                 --border-label " DNF history " \
                 --no-sort \
                 --reverse \
                 --header-lines 1 \
                 --list-label " DNF transaction(s) " \
                 --preview-label " DNF transaction info "

  fi
}

_fzf-dnf-packages() {
  # CAUTION: "dnf repoquery --list" may not work with --cacheonly!?
  _fzf-wrapper "Alt-i:Package info;Alt-f:Files in package;Enter:$1" "alt-i" \
               "_fzf-preview-header \"Info  for package {1}\"; sudo dnf repoquery --cacheonly --quiet --info {1}; i=\$(rpm -q --queryformat '%{INSTALLTIME:date}' {1}) && echo \"Package installed at \$i.\"" \
               "70%,~2:wrap" \
               $(_fzf-query-history 2) \
               --bind "alt-f:change-preview(_fzf-preview-header \"Files in package {1}\"; sudo dnf repoquery --quiet --list {1})" \
               --bind 'enter:become(echo {+1})' \
               --border-label " $1 " \
               --header-lines 1 \
               --list-label " $2 " \
               --multi \
               --no-sort \
               --preview-label " Press F1 for help. " \
               --reverse \
               --query "$3"
}

_dnf-packages() {
  ( echo "Package Repository"
    dnf-repoquery --queryformat '%{name}-%{evr}.%{arch} %{reponame}\n' "$@" | \
    sort --ignore-case
  ) | column -t -l2
}

dnf-install() {
  _dnf-packages | \
  _fzf-dnf-packages "Install packages via DNF" "Available DNF packages" "$1" | \
  xargs --no-run-if-empty --open-tty sudo dnf install
}

dnf-remove() {
  _dnf-packages --installed | \
  _fzf-dnf-packages "Remove packages via DNF" "Installed packages" "$1" | \
  xargs --no-run-if-empty --open-tty sudo dnf remove
}

dnf-search() {
  if [ $# -gt 0 ] ; then

    ( echo "Package : Summary"
      sudo dnf search --cacheonly --quiet "$@" | \
      grep -v = | \
      sort | \
      uniq
    ) | column -t -s: -l2 | \
    _fzf-dnf-packages "Search package matching $*" "Matching packages" | \
    xargs --no-run-if-empty --open-tty sudo dnf install

  else
    
    fn-usage "<pattern>"
    
  fi
}

dnf-upgrades() {
  local _package _testing

  while [ $# -gt 0 ] ; do
    case "$1" in
         -h|--help) fn-usage "[--help] [--testing] [pattern]"; return 0;;
      -t|--testing) _testing="--enablerepo *updates-testing";;
                 *) break;;
    esac
    shift
  done

  _package='name={1}; pkg=${name%.*}-{2}.${name##*.}'

  {
    if in-path dnf5 ; then
      echo "Package Version Repository"
      sudo dnf check-upgrade $_testing --quiet
    else
      sudo dnf list updates $_testing --quiet
    fi
  } | column -t | \
  _fzf-wrapper "Alt-c:Package change log;Alt-i:Package info;Ctrl-a:Toggle select all;Enter:Upgrade selected packages" \
               "alt-c" "$_package; sudo dnf changelog $_testing --quiet \$pkg" "60%,~1:wrap"\
               --bind "ctrl-a:toggle-all" \
               --bind "alt-i:change-preview($_package; sudo dnf repoquery $_testing --quiet --info \$pkg; printf \"\\n%-13s: %s\" Current \$(rpm -q {1}))" \
               --bind 'enter:become(echo {+1})' \
               --border none \
               --exit-0 \
               --list-label " Available upgrades (ctrl-a: toggle all)" \
               --header-lines 1 \
               --multi \
               --preview-label " Press F1 for help " \
               --query "$1" \
               --reverse | \
  xargs --no-run-if-empty --open-tty sudo dnf upgrade $_testing
}

dnf-requires() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --requires --resolve "$*"
  else
    fn-usage "<package>"
  fi
}

dnf-recommends() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --recommends --resolve "$*"
  else
    fn-usage "<package>"
  fi
}

dnf-suggests() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --suggests --resolve "$*"
  else
    fn-usage "<package>"
  fi
}
