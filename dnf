# -*- shell-script -*-

in-path dnf || return 0

rpm-ostree status --booted 2>/dev/null 1>&2 && return 0

dnf-repoquery() {
  sudo -A dnf repoquery --quiet "$@"
}

dnf-files() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --list "$*"
  else
    fn-usage "package"
  fi
}

dnf-history() (
  if [[ "$1" =~ ^-+h(elp)?$ ]] ; then
    fn-usage "[--help] [package ..]"
  else
    myprofile _dnf
    _dnf-history "$@"
  fi
)

dnf-list() (
  while [ $# -gt 0 ] ; do
    case "$1" in
      -h|--help) fn-usage "[--help] [fzf query]"; exit 0;;
              *) break;;
    esac
  done

  # CAUTION: Utilizes _fzf-rpm (avoids latency caused by dnf wrapping rpm API for installed
  # packages). Only difference is use of dnf-what() instead of rpm-what(): "dnf repoquery --what*
  # --resolve" results are less prone to inconstent package capability notations.
  myprofile _rpm
  fn-export dnf-what dnf-repoquery
  _fzf-rpm "$@"
)

dnf-install() (
  if [[ "$1" =~ ^-+h(elp)?$ ]] ; then

    fn-usage "[--help | path | query]
In case argument contains a slash then it is assumed packages deploying this path pattern are to
search. Otherwise argument is treated as fzf query."

  else

    myprofile _dnf
    local _search _query
    [[ "$1" =~ / ]] && _search="$1" || _query="$1"
    _dnf-packages $_search | \
    _fzf-dnf-packages "Install packages via DNF" "Available DNF packages" "$_query" | \
    xargs --no-run-if-empty --open-tty sudo dnf install

  fi
)

dnf-remove() (
  myprofile _dnf
  _dnf-packages --installed | \
  _fzf-dnf-packages "Remove packages via DNF" "Installed packages" "$1" | \
  xargs --no-run-if-empty --open-tty sudo dnf remove
)

dnf-search() (
  if [ $# -gt 0 ] ; then

    myprofile _dnf

    { sudo -A dnf search --quiet "$@" | \
      sed -rn '/^Matched fields/d;
               s/^ ?([[:alnum:]_\.-]+) *:? +([[:alnum:]].*)$/\1:\2/p;' | \
      sort | \
      uniq
    } | column -t -s: -l2 -C name=Package -C name=Summary | \
    _fzf-dnf-packages "Search package matching $*" "Matching packages" "" "Install select package(s)" | \
    xargs --no-run-if-empty --open-tty sudo dnf install

  else

    fn-usage "[--all] <pattern>"

  fi
)

dnf-upgrades() (
  declare -g _testing _scopes
  while [ $# -gt 0 ] ; do
    case "$1" in
           -b|--bugfix) _scopes+=" --bugfix";;
      -e|--enhancement) _scopes+=" --enhancement";;
             -h|--help) fn-usage "[--bugfix] [--enhancement] [--help] [--security] [--testing] [pattern]"; return 0;;
         -s|--security) _scopes+=" --security";;
          -t|--testing) _testing="--enablerepo *updates-testing";;
                     *) break;;
    esac
    shift
  done

  myprofile _dnf
  _dnf-upgrades
)
complete -W "--{bugfix,enhancement,help,security,testing}" dnf-upgrades

dnf-what() {
  local _installed _query _rpm _cap

  while [ $# -gt 0 ] ; do
    case "$1" in
       -c|--capabilties) _cap=y;;
      -h|--help|--usage) fn-usage "[--capabilties] [--help] [--installed] package"; [[ "$1" =~ ^-h ]]; return;;
         -i|--installed) _installed="--installed";;
                      *) break;;
    esac
    shift
  done

  if [ $# -eq 1 ] ; then

    _rpm="$(dnf-repoquery --qf "%{NAME}" ${_installed:---available} "$1")"

    if [ -z "$_rpm" ] ; then

      fn-error "Package \"$1\" is $([ -n "$_installed" ] && echo "not installed" || echo "unknown")!"
      return 1

    fi

    for _query in requires depends enhances provides recommends suggests supplements obsoletes conflicts; do

      { [[ "$_query" == "requires-pre" ]] || \
          echo -e "=What $_query:\n$(dnf-repoquery $_installed --queryformat="%{name}\n" --what$_query "$_rpm")\n"
        [ -z "$_cap" ] || echo -e "\n=${_query^}:\n$(dnf-repoquery --$_query $_installed "$_rpm")\n\n"
      } | sed -r 's/^no package .+$//;s/^([^=][^ ]+)/  - \1/;s/^=//' | cat --squeeze-blank

    done

  else

    $FUNCNAME --usage

  fi
}
