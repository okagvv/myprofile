# -*- shell-script -*-

in-path dnf || return 0

rpm-ostree status --booted 2>/dev/null 1>&2 && return 0

dnf-repoquery() {
  sudo dnf repoquery --quiet "$@"
}

dnf-files() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --list "$*"
  else
    fn-usage "package"
  fi
}

dnf-list() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --qf='%10{repoid} %{buildtime} %{installtime} %-10{downloadsize}->%10{installsize} %{name}-%{evr}.%{arch}\n\t\t\t\t\t\t    %{summary}' "$*"
  else
    fn-usage "package .."
  fi
}

dnf-history() (
  if [[ "$1" =~ ^-+h(elp)?$ ]] ; then

    fn-usage "[--help] [package ..]"

  else

    myprofile _fzf
    sudo -A dnf history "$@" | \
    tail -n +3 | \
    awk -v FS="|" '{ printf "%s|%s|%s\n",$1,$3,$2 }' | \
    sed -r 's/ \| /\|/g' | \
    column -t -s"|" -C name=No,right -C name=Timestamp -C name=Scope | \
    _fzf-wrapper --bind "enter:become(echo sudo dnf history info,redo,rollback,undo {1})" \
                 --border-label " DNF history " \
                 --header-lines 1 \
                 --help "alt-i:history info;enter:Print command-line template for processing selected transaction" \
                 --list-label " DNF transaction(s) " \
                 --no-sort \
                 --reverse \
                 --preview-init "alt-i:dnf history info {1}" \
                 --preview-label " DNF transaction info " \
                 --preview-window "40%,~1:wrap"

  fi
)

dnf-install() (
  if [[ "$1" =~ ^-+h(elp)?$ ]] ; then

    fn-usage "[--help | path | query]
In case argument contains a slash then it is assumed packages deploying this path pattern are to
search. Otherwise argument is treated as fzf query."

  else

    myprofile _dnf
    local _search _query
    [[ "$1" =~ / ]] && _search="$1" || _query="$1"
    _dnf-packages $_search | \
    _fzf-dnf-packages "Install packages via DNF" "Available DNF packages" "$_query" | \
    xargs --no-run-if-empty --open-tty sudo dnf install

  fi
)

dnf-remove() (
  myprofile _dnf
  _dnf-packages --installed | \
  _fzf-dnf-packages "Remove packages via DNF" "Installed packages" "$1" | \
  xargs --no-run-if-empty --open-tty sudo dnf remove
)

dnf-search() {
  if [ $# -gt 0 ] ; then

    ( echo "Package : Summary"
      myprofile _dnf
      sudo -A dnf search --quiet "$@" | \
      grep -v = | \
      sort | \
      uniq
    ) | column -t -s: -l2 | \
    _fzf-dnf-packages "Search package matching $*" "Matching packages" | \
    xargs --no-run-if-empty --open-tty sudo dnf install

  else

    fn-usage "<pattern>"

  fi
}

dnf-upgrades() (
  local _testing

  while [ $# -gt 0 ] ; do
    case "$1" in
         -h|--help) fn-usage "[--help] [--testing] [pattern]"; return 0;;
      -t|--testing) _testing="--enablerepo *updates-testing";;
                 *) break;;
    esac
    shift
  done
  export _testing

  __bodhi() {
    _bodhi_updates "${2%.*}-$3.${2##*.}"
  }
  __dnf() {
    sudo dnf $1 $_testing --quiet "${@: 4}" "${2%.*}-$3.${2##*.}"
  }
  __upgrades() {
    {
      if in-path dnf5 ; then
        echo "Package Version Repository"
        sudo -A dnf check-upgrade $_testing --quiet
      else
        sudo -A dnf list updates $_testing --quiet
      fi
    } | column -t
  }
  export -f __bodhi __dnf __upgrades

  myprofile _dnf

  FZF_DEFAULT_COMMAND=__upgrades \
  _fzf-wrapper --bind "ctrl-a:toggle-all" \
               --bind "alt-b:execute(__bodhi {1} {2})" \
               --bind "alt-i:change-preview(__dnf repoquery {1} {2} --info; printf \"\\n%-13s: %s\" Current \$(rpm -q {1}))" \
               --bind "alt-h:execute(__dnf repoquery {1} {2} --queryformat '%{url}' | xargs -r $BROWSER 2>/dev/null)" \
               --bind 'enter:become(echo {+1})' \
               --bind 'zero:execute(echo "No pending updates found!")+abort' \
               --border none \
               --header-lines 1 \
               --help "Alt-b:Search package on Bodhi;Alt-c:Package change log;Alt-h:Open package URL in \\\$BROWSER;Alt-i:Package info;Ctrl-a:Toggle select all;Enter:Upgrade selected packages" \
               --list-label " Select upgrades to install " \
               --multi \
               --preview-init "alt-c:__dnf changelog {1} {2}" \
               --preview-label " Press F1 for help " \
               --preview-window "60%,~1:wrap" \
               --query "$1" \
               --reverse | \
  xargs --no-run-if-empty --open-tty sudo dnf upgrade $_testing
)

dnf-requires() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --requires --resolve "$*"
  else
    fn-usage "<package>"
  fi
}

dnf-recommends() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --recommends --resolve "$*"
  else
    fn-usage "<package>"
  fi
}

dnf-suggests() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --suggests --resolve "$*"
  else
    fn-usage "<package>"
  fi
}
