#!/usr/bin/echo "myprofile must be *sourced* by bash sessions/scripts!"
# -*- shell-script -*-
#
# Without arguments all script listed in "myprofile.default" will be sourced too.

myprofile() {
  local _src _script _verbose
  local -a _scripts

  _src="$(realpath "${BASH_SOURCE[0]}")"

  while [ $# -gt 0 ] ; do
    case "$1" in
         -h|--help) echo "Usage: $FUNCNAME [--help | --install | [--verbose] [{script}]]";
                    return 0;;
      -i|--install) if [[ "$(id -u)" == "0" ]] ; then
                      ln -sfv "$_src" "/etc/profile.d/zz-$FUNCNAME.sh"
                    else
                      touch ~/.bash_profile
                      _script="$(sed "\~$_src~d" ~/.bash_profile)"
                      echo -e "source $_src\n\n$_script" >~/.bash_profile
                      grep --with-filename "$_src" ~/.bash_profile
                    fi
                    return 0;;
      -v|--verbose) _verbose=echo;;
                -*) echo "$FUNCNAME: Unsupported option: $1" >&2;
                    return 1;;
                 *) _scripts+=("$1");;
    esac
    shift
  done

  [[ ${#_scripts[@]} -eq 0 && -n "$PS1" ]] && _scripts=($(cat "${_src%/*}/$FUNCNAME.default"))

  for _script in ${_scripts[@]} ; do

    [[ "$_script" =~ ^[[:space:]]*\# ]] && continue
    [ -z "$_verbose" ] || echo "Source \"$_script\"."

    if ! source "${_src%/*}/$_script" ; then

      echo "Load of myprofile script \"$_script\" has failed!" >&2
      return 1

    fi

  done
}

myprofile "$@"
