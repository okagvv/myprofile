#!/usr/bin/echo "myprofile must be *sourced* by bash sessions/scripts!"
# -*- shell-script -*-

myprofile() {
  local _default _dir _script _self _src _verbose _opt
  local -a _scripts _search

  _self="$MYPROFILE/$FUNCNAME"

  while [ $# -gt 0 ] ; do
    case "$1" in
         -h|--help) echo "Usage: $FUNCNAME [--help | --install | [--default] [--verbose] [{script}]]";
                    return 0;;
      -d|--default) _default=y;;
      -i|--install) if [[ "$(id -u)" == "0" ]] ; then
                      ln -sfv "$_self" "/etc/profile.d/zz-$FUNCNAME.sh"
                    else
                      touch ~/.bash_profile
                      _script="$(sed "\~$_self~d" ~/.bash_profile)"
                      echo -e "source $_self\n\n$_script" >~/.bash_profile
                      grep --with-filename "$_self" ~/.bash_profile
                    fi
                    return 0;;
      -v|--verbose) _verbose=echo;;
                -*) echo "$FUNCNAME: Unsupported option: $1" >&2;
                    return 1;;
                 *) _scripts+=("$1");;
    esac
    shift
  done

  _search=("$HOME/.config/$FUNCNAME" "/etc/$FUNCNAME.d" "$MYPROFILE")

  if [[ ${#_scripts[@]} -eq 0 && -n "$PS1$_default" ]] ; then
    for _dir in ${_search[@]} ; do
      _default="$_dir/default"
      if [ -s "$_default" ] ; then
        _scripts=($(grep -v -E "^[[:space:]]*[#_]" "$_default"))
        break
      fi
    done
  fi

  for _script in ${_scripts[@]} ; do

    if [[ "$_script" =~ \? ]] ; then
      _script="${_script//\?/}"
      _opt=y
    else
      _opt=
    fi

    if [[ "$_script" =~ ^/ && -s "$_script" ]] ; then
      _src="$_script"
    else
      for _dir in ${_search[@]} ; do
        _src="$_dir/$_script"
        [ -s "$_src" ] && break
      done
    fi

    if [ -s "$_src" ] ; then
      [ -z "$_verbose" ] || echo "Source \"$_src\"."
      if ! source "$_src" ; then
        echo "Load of myprofile script \"$_src\" has failed!" >&2
        return 1
      fi
    elif [ -n "$_opt" ] ; then
      [ -z "$_verbose" ] || echo "Skip missing optional script \"$_script\"."
    else
      echo "Missing myprofile script \"$_script\"!" >&2
      return 1
    fi
  done
}
export -f myprofile

# CAUTION: During initial "source .../myprofile" it is assured that "$BASH_SOURCE[0]" points to this
# script. For later myprofile() calls this is not guaranteed.
export MYPROFILE="$(realpath --canonicalize-missing "${BASH_SOURCE[0]}/..")"

myprofile "$@"
