# -*- shell-script -*-

_rpm-inspect-scope() {
  rpm --query --$1 "$2" | \
  fzf --border none \
      --list-label " ${1^} in package \"$2\" " \
      --multi \
      --preview 'echo {}; fzf-preview-hrule; less {} | bat -n --color=always --file-name={}' \
      --preview-window '60%:~2:wrap' | \
  xargs -r
}

rpm-changelog() {
  [ $# -eq 1 ] && _rpm-inspect-scope changelog "$1" || fn-usage "<package>"
}

rpm-conf() {
  [ $# -eq 1 ] && _rpm-inspect-scope configfiles "$1" || fn-usage "<package>"
}

rpm-docs() {
  [ $# -eq 1 ] && _rpm-inspect-scope docfiles "$1" || fn-usage "<package>"
}

_rpm-history-preview-docs() {
  echo "${1^} doc file for package \"$2\""
  fzf-preview-hrule

  local -a _patterns
  case "$1" in
    changelog) _patterns=(changelog release news changes);;
            *) _patterns=(readme);;
  esac

  local _docs _pattern _log
  _docs="$(rpm --query --docfiles "$2")"

  if [ ${#_docs[@]} -gt 0 ] ; then

    for _pattern in "${_patterns[@]}" ; do

      _log="$(grep -i -E "/[^/]*$_pattern[^/]*$" <<<"$_docs" | head -1)"

      if [ -n "$_log" ] ; then

        cat "$_log"
        return 0

      fi      
    done

    echo "No ${1^} file identified in package doc files."

  else

    echo "Package contains no doc files!"

  fi
}

_rpm-history-preview() {
  echo "$1 package \"$3\""
  fzf-preview-hrule
  rpm -q $2 "$3"
}

export -f _rpm-history-preview _rpm-history-preview-docs

rpm-history() {
  local _default
  _default='_rpm-history-preview "Changelog of" --changelog {6}'

  LC_TIME=POSIX rpm --query --all --queryformat '%{INSTALLTIME} %{INSTALLTIME:date}*%{NAME}-%{VERSION}-%{RELEASE}.%{ARCH}\n' 2>&1 | \
  sort --reverse | \
  cut --characters=12- | \
  column --table --separator "*" | \
  fzf --bind='alt-c:+change-preview(_rpm-history-preview "Config files in" --configfiles {6})' \
      --bind='alt-d:+change-preview(_rpm-history-preview "Doc files in" --docfiles {6})' \
      --bind='alt-f:+change-preview(_rpm-history-preview "Files in" -l {6})' \
      --bind='alt-i:+change-preview(_rpm-history-preview "Info for" -i {6})' \
      --bind="alt-l:+change-preview($_default)" \
      --bind='alt-r:+change-preview(_rpm-history-preview-docs readme {6})' \
      --bind='alt-s:+change-preview(_rpm-history-preview "Scripts in" --scripts --triggers {6})' \
      --bind='alt-u:+change-preview(_rpm-history-preview-docs changelog {6})' \
      --bind='alt-v:+change-preview(_rpm-history-preview "Verify files of" "--verify --verbose" {6})' \
      --border-label " Package install history " \
      --list-border rounded \
      --list-label " Matching packages " \
      --multi \
      --no-sort \
      --preview "$_default" \
      --preview-label " Use alt-{c,d,f,i,l,r,s,u,v} to change information scope. " \
      --preview-window '60%,~2:wrap' \
      --query "$1" \
      --reverse | \
  awk '{ printf "%s ", $6 } END { printf "\n" }'
}

rpm-info() {
  rpm -qa "$@" | \
  fzf --border-label " Package infos " \
      --list-label " Matching packages " \
      --preview "rpm -qilv --changelog {1}" \
      --preview-label " Package info, changelog and files "
}

rpm-owner() {
  if [ $# -gt 0 ] ; then

    local _f __f
    for _f in "$@" ; do

      [[ -e "$_f" || "$_f" = /* ]] && __f="$_f" || __f="$(/usr/bin/which "$_f" 2>/dev/null)"
      [[ -z "$__f" ]] && __f="$_f"

      echo "$__f: $(rpm --query --file --qf '%{NAME}-%{VERSION}.%{ARCH}\n' "$__f" 2>/dev/null)"

    done

  else
    fn-usage "file .."
  fi
}

rpm-status() {
  if [ $# -gt 0 ] ; then
    rpm --query --list --state --verbose "$@" 2>&1 | less
  else
    fn-usage "package .."
  fi
}

rpm-verify() {
  if [ $# -gt 0 ] ; then
    rpm --verify --verbose "$@" 2>&1 | less
  else
    fn-usage "package .."
  fi
}

# everything below
# .. requires root permission,
[[ "$(id -u)" == "0" ]] || return 0

# .. is only applicable if dnf is installed and
in-path dnf || return 0

# .. system not booted via rpm-ostree
rpm-ostree status --booted 2>/dev/null && return 0

rpm-freshen() {
  if [ $# -gt 0 ] ; then
    rpm --freshen --verbose --hash "$@" 2>&1 | less
  else
    fn-usage "rpmfile"
  fi
}

dnf-repoquery() {
  dnf repoquery --cacheonly --quiet "$@"
}

dnf-list() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --qf='%10{repoid} %{buildtime} %{installtime} %-10{downloadsize}->%10{installsize} %{name}-%{evr}.%{arch}\n\t\t\t\t\t\t    %{summary}' "$*"
  else
    fn-usage "package .."
  fi
}

dnf-files() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --list "$*"
  else
    fn-usage "package"
  fi
}

dnf-history() {
  dnf history | \
    tail -n +3 | \
    awk -v "FS=|" '{ print $1 "|" $3 "|" $2 } BEGIN { print "No | Timestamp | Scope\n" }' | \
    tr -s ' ' | \
    column -t -s "|" -o "|" -l 3 | \
    fzf --bind "enter:become(echo dnf history info,redo,rollback,undo {1})" \
        --border-label " DNF history " \
        --no-sort \
        --reverse \
        --header-lines 1 \
        --list-label " DNF transaction(s) " \
        --preview "dnf history info {1}" \
        --preview-label " DNF transaction info " \
        --preview-window "40%,~1:wrap"
}

dnf-install() {
  dnf-repoquery --queryformat '%{name}' | \
  sort --ignore-case | \
  fzf --border-label " Install packages via DNF " \
      --list-label " Available DNF packages " \
      --multi \
      --no-sort \
      --preview-label " Package description " \
      --preview-window 'right,65%,wrap' \
      --preview 'dnf --cacheonly --quiet info {1}' \
      --query "$1" | \
  xargs -ro sudo dnf install
}

dnf-remove() {
  rpm -qa --qf '%{NAME}\n' "$@" | \
  sort --ignore-case | \
  fzf --border-label " Remove packages via DNF " \
      --list-label " Installed packages " \
      --multi \
      --no-sort \
      --preview-label " Package description " \
      --preview-window 'right,65%,wrap' \
      --preview 'rpm -qa --info {1}' \
      --query "$1" | \
  xargs -ro sudo dnf remove
}

dnf-search() {
  if [ $# -gt 0 ] ; then

    dnf search --cacheonly --quiet "$@" | \
    grep -v = | \
    sort | \
    uniq | \
    fzf --multi \
        --list-label " Matching packages " \
        --border-label " Search package to install " \
        --preview-label " Package info " \
        --preview-window 'right,50%,wrap' \
        --preview 'dnf --cacheonly --quiet info {1}' | \
    xargs -ro sudo dnf install

  else

    fn-usage "pattern"

  fi
}

dnf-requires() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --requires --resolve "$*"
  else
    fn-usage "package"
  fi
}

dnf-recommends() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --recommends --resolve "$*"
  else
    fn-usage "package"
  fi
}

dnf-suggests() {
  if [ $# -gt 0 ] ; then
    dnf-repoquery --suggests --resolve "$*"
  else
    fn-usage "package"
  fi
}

dnf-testing() {
  if [ $# -gt 0 ] ; then
    dnf --enablerepo updates-testing "$@"
  else
    fn-usage "dnf-args"
  fi
}

new-alias updateinfo 'dnf updateinfo --info'
