# -*- shell-script -*-

new-alias failed 'systemctl list-units --failed'
new-alias list_deps 'systemctl list-dependencies "$(systemctl get-default)"'
new-alias sysmounted 'systemctl --type mount'
new-alias boot_blame sudo 'systemd-analyze blame'
new-alias boot_times sudo 'systemd-analyze plot | display -'
new-alias dstat sudo 'dstat --time --load --vmstat --net --swap --io'
new-alias iotop sudo 'iotop -a -c -o -P'
new-alias iostat sudo 'iostat -xmt 1'

if in-path ausearch ; then

  new-alias avctoday sudo 'ausearch -ts today -m avc'
  new-alias avcyesterday sudo 'ausearch -ts yesterday -m avc'

fi

avcrecent() {
  if in-path ausearch ; then
    sudo ausearch -ts recent -m avc "$@"
  else
    # fallback for hosts without auditd installation
    sudo journalctl --dmesg "$@" | grep -e type=1300 -e type=1400
  fi
}

if ! is-root ; then

  journalctl() { /usr/bin/journalctl --user "$@"; }
  systemctl() { /usr/bin/systemctl --user "$@"; }
  export -f journalctl systemctl

fi

fzf-units() (
  # Iterate over systemd units with recent journal entries.
  declare -g _all _priorange _prio _since _journal _prio_journal _properties _systemctl _header _sudo _user _grep _boot _failed
  _boot="-0"
  _prio=debug
  _since=48
  _user="$(whoami)"
  while [ $# -gt 0 ] ; do
    case "$1" in
           -a|--all) _all=--all;;
          -b|--boot) _boot="$2"; shift;;
        -f|--failed) _failed="--failed";;
          -g|--grep) _grep="--grep $2"; shift;;
          -h|--help) fn-usage "[--help] [--boot id] [--grep regexp] [--all | --failed | --priority 0..7|emerg|alert|crit|err|warning|notice|info|debug] [--since \"n (m|h)\"] [--user name] [fzf query]"; return 0;;
      -p|--priority) _prio="$2"; shift;;
         -s|--since) _since="$2"; shift;;
          -u|--user) _user="$2"; _sudo="sudo -A -u $_user"; shift;;
                  *) break;;
    esac
    shift
  done

  myprofile _system
  _fzf-units "$@"
)

fzf-journal() (
  # Iterate over syslog identifiers of recent journal entries.
  declare -g _priorange _prio _since _altp _altj _journal _prio_journal _header _sudo _user _grep _boot
  _boot="-0"
  _prio=debug
  _since=48
  while [ $# -gt 0 ] ; do
    case "$1" in
          -b|--boot) _boot="$2"; shift;;
          -h|--help) fn-usage "[--help] [--boot id] [--grep regexp] [--priority 0..7|emerg|alert|crit|err|warning|notice|info|debug] [--since \"n (m|h)\"] [--user name] [fzf query]"; return 0;;
          -g|--grep) _grep="--grep $2"; shift;;
      -p|--priority) _prio="$2"; shift;;
         -s|--since) _since="$2"; shift;;
          -u|--user) _user="$2"; _sudo="sudo -A -u $_user"; shift;;
                  *) break;;
    esac
    shift
  done

  myprofile _system
  _fzf-journal "$@"
)

myjournalctl() {
  journalctl --no-hostname --output=with-unit "$@"
}

is-root || return 0

juser() {
  if [ $# -gt 0 ] ; then
    local _uid="$(id -u "$1")"
    shift
    myjournalctl --pager-end _UID="$_uid" "$@"
  else
    fn-usage "user [journalct options]"
  fi
}
complete -A user -o default juser

mysu() {
  # Start command-line via su for user derived from path owner of last argument.
  # Preserves white spaces in arguments.
  if [ $# -ge 2 ] ; then
    su $(stat -c %U "${*: -1}") -c "$(printf "'%s' " "${@}")"
  else
    fn-usage "command [options|args] file"
  fi
}
complete -A command -o default mysu

oom-killed() {
  myjournalctl --dmesg --since today "$@" | grep -i 'killed process'
}

set-dns() {
  case "$1" in
    router|pihole) sudo resolvectl dns "$(resolvectl default-route | sed -rn 's/^Link [[:digit:]]+ \(([[:alnum:]]+)\): yes$/\1/p')" \
                                       "$(host -t A "$1" | sed 's/^.* //')"
                   sudo resolvectl flush-caches;;
             curr) resolvectl status
                   sudo resolvectl statistics;;
                *) fn-usage "router|pihole|curr";;
  esac
}
complete -W "{router,pihole,curr}" set-dns
