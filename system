# -*- shell-script -*-

new-alias failed 'systemctl list-units --failed'
new-alias list_deps 'systemctl list-dependencies "$(systemctl get-default)"'
new-alias sysmounted 'systemctl --type mount'
new-alias avcrecent sudo 'ausearch -ts recent -m avc'
new-alias avctoday sudo 'ausearch -ts today -m avc'
new-alias avcyesterday sudo 'ausearch -ts yesterday -m avc'
new-alias boot_blame sudo 'systemd-analyze blame'
new-alias boot_times sudo 'systemd-analyze plot | display -'
new-alias dstat sudo 'dstat --time --load --vmstat --net --swap --io'
new-alias iotop sudo 'iotop -a -c -o -P'
new-alias iostat sudo 'iostat -xmt 1'

if ! is-root ; then

  journalctl() { /usr/bin/journalctl --user "$@"; }
  systemctl() { /usr/bin/systemctl --user "$@"; }
  export -f journalctl systemctl

fi

fzf-units() (
  local _all _priorange _prio _since _journal _prio_journal _properties _systemctl _header _sudo _user
  _prio=debug
  _since=48
  _user="$(whoami)"
  while [ $# -gt 0 ] ; do
    case "$1" in
           -a|--all) _all=--all;;
          -h|--help) fn-usage "[--help] [--all | --priority 0..7|emerg|alert|crit|err|warning|notice|info|debug] [--since \"n (m|h)\"] [--user name] [fzf query]"; return 0;;
      -p|--priority) _prio="$2"; shift;;
         -s|--since) _since="$2"; shift;;
          -u|--user) _user="$2"; _sudo="sudo -A -u $_user"; shift;;
                  *) break;;
    esac
    shift
  done

  [[ "$_prio" =~ \.\. ]] && _priorange="$_prio" || _priorange="0..$_prio"
  [[ "$_since" =~ ^[[:digit:]]+$ ]] && _since+=" hours"
  # validate journalctl parameters
  $_sudo journalctl --boot --lines 1 --since "$_since ago" --priority="$_priorange" >/dev/null || exit 1

  _header="Journal entries for unit {1}"
  _journal="_fzf-journal ${_sudo:+$_user} --unit {1} --since \"$_since ago\""
  _prio_journal="$_journal --priority=$_priorange"
  _systemctl="$_sudo systemctl"
  _properties="$_systemctl show {1} | sort | bat --color always --number --language ini"

  myprofile _fzf

  if [[ -z "$_all" && -n "$_prio" ]] ; then
    echo Unit
    $_sudo journalctl --output=export --output-fields=$([[ "$_user" == root ]] && echo _SYSTEMD_UNIT,UNIT || echo _SYSTEMD_USER_UNIT,USER_UNIT) \
                      --boot --since "$_since ago" --priority="$_priorange" | \
    sed --silent --regexp-extended 's/^.*UNIT=(.+)$/\1/p' | \
    sort --unique
  else
    $_sudo systemctl --plain $_all | \
    sed '/^$/,$d'
  fi | \
  _fzf-wrapper --bind "alt-d:change-preview(_fzf-preview-header \"Dependencies for unit {1}\"; $_systemctl list-dependencies {1})" \
               --bind "alt-f:change-preview(_fzf-preview-header \"Unit files for {1}\"; $_systemctl cat -- {1})" \
               --bind "alt-h:change-preview(_fzf-preview-header \"Help for unit {1}\"; $_systemctl help {1} | bat --color=always --style plain --language man)" \
               --bind "alt-j:change-preview(_fzf-preview-header \"$_header\"; $_journal)" \
               --bind "alt-J:execute($_journal)" \
               --bind "alt-o:change-preview(_fzf-preview-header \"Show properties for unit {1}\"; $_properties)" \
               --bind "alt-O:execute($_properties)" \
               --bind "alt-p:change-preview(_fzf-preview-header \"$_header with priority $_priorange\"; $_prio_journal)" \
               --bind "alt-P:execute($_prio_journal)" \
               --bind "alt-r:change-preview(_fzf-preview-header \"Restart unit {1}\"; $_systemctl restart --show-transaction {1})" \
               --bind "enter:become(echo systemctl status,restart,stop {+1})" \
               --border-label " Systemd Units with journal entries logged during last $_since in reverse order " \
               --header-lines 1 \
               --help "Alt-d:Unit dependencies;Alt-f:List unit files;Alt-h:Help for unit
                       Alt-j:Recent journal entries;Alt-J:Recent journal entries in pager
                       Alt-o:Show properties;Alt-O:Show properties in pager
                       Alt-p:Recent journal entries with priority $_priorange;Alt-P:Recent journal entries with priority $_priorange in pager
                       Alt-r:Restart unit;Alt-s:Unit status;Enter:Print systemctl template for selected units" \
               --multi \
               --no-sort \
               --preview-init "alt-s:_fzf-preview-header \"Status of unit {1}\"; $_systemctl status -- {1}" \
               --preview-window "70%,~2:wrap" \
               --query "$1" \
               --reverse
)

fzf-journal() (
  # Iterate over syslog identifiers of recent journal entries.
  local _priorange _prio _since _altp _altj _journal _prio_journal _header _sudo _user
  _prio=debug
  _since=48
  while [ $# -gt 0 ] ; do
    case "$1" in
          -h|--help) fn-usage "[--help] [--priority 0..7|emerg|alert|crit|err|warning|notice|info|debug] [--since \"n (m|h)\"] [--user name] [fzf query]"; return 0;;
      -p|--priority) _prio="$2"; shift;;
         -s|--since) _since="$2"; shift;;
          -u|--user) _user="$2"; _sudo="sudo -A -u $_user"; shift;;
                  *) break;;
    esac
    shift
  done

  [[ "$_prio" =~ \.\. ]] && _priorange="$_prio" || _priorange="0..$_prio"
  [[ "$_since" =~ ^[[:digit:]]+$ ]] && _since+=" hours"
  # validate journalctl parameters
  $_sudo journalctl --boot --lines 1 --since "$_since ago" --priority="$_priorange" >/dev/null || exit 1

  _header="Journal entries for {1}"
  _journal="_fzf-journal $_user --identifier={1} --since \"$_since ago\""
  _prio_journal="$_journal --priority=$_priorange"
  _altj="_fzf-preview-header \"$_header\"; $_journal"
  _altp="_fzf-preview-header \"$_header with priority $_priorange\"; $_prio_journal"

  myprofile _fzf
  { echo "Identifier"
    $_sudo journalctl --output=export --output-fields=SYSLOG_IDENTIFIER --boot --since "$_since ago" --priority="$_priorange" | \
    sed -rn 's/^SYSLOG_IDENTIFIER=(.+)/\1/p' | \
    sort -u
  } | \
  _fzf-wrapper --bind "$([[ "$_prio" == debug ]] && echo "alt-p:change-preview($_altp)" || echo "alt-j:change-preview($_altj)")" \
               --bind "alt-J:execute($_journal)" \
               --bind "alt-P:execute($_prio_journal)" \
               --border-label " Journal entries per syslog identifier logged during last $_since in reverse order " \
               --header-lines 1 \
               --help "Alt-j:Recent journal entries;Alt-J:Recent journal entries in pager
                       Alt-p:Recent journal entries with priority $_priorange;Alt-P:Recent journal entries with priority $_priorange in pager" \
               --no-sort \
               --preview-init "$([[ "$_prio" == debug ]] && echo "alt-j:$_altj" || echo "alt-p:$_altp")" \
               --preview-window "70%,~2:wrap" \
               --query "$1" \
               --reverse
)

myjournalctl() {
  journalctl --no-hostname --output=with-unit "$@"
}

is-root || return 0

juser() {
  if [ $# -gt 0 ] ; then
    local _uid="$(id -u "$1")"
    shift
    myjournalctl --pager-end _UID="$_uid" "$@"
  else
    fn-usage "user [journalct options]"
  fi
}
complete -A user -o default juser

mysu() {
  # Start command-line via su for user derived from path owner of last argument.
  # Preserves white spaces in arguments.
  if [ $# -ge 2 ] ; then
    su $(stat -c %U "${*: -1}") -c "$(printf "'%s' " "${@}")"
  else
    fn-usage "command [options|args] file"
  fi
}
complete -A command -o default mysu

oom-killed() {
  myjournalctl --dmesg --since today "$@" | grep -i 'killed process'
}
